{"remainingRequest":"D:\\dragon_course\\front_code\\project3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dragon_course\\front_code\\project3\\src\\main\\Main.vue?vue&type=template&id=03341566&scoped=true&","dependencies":[{"path":"D:\\dragon_course\\front_code\\project3\\src\\main\\Main.vue","mtime":1578739525781},{"path":"D:\\dragon_course\\front_code\\project3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dragon_course\\front_code\\project3\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\dragon_course\\front_code\\project3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dragon_course\\front_code\\project3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}